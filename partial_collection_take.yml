- name: Take a Partial Collection from devices with changes only

  hosts: localhost
  gather_facts: no

  vars_files:
    - /var/lib/jenkins/forward.properties

  tasks:

    - name: Take a new partial collection
      forward_snapshot:
        url: "{{url}}"
        username: "{{ username }}"
        password: "{{ password }}"
        network_name: "{{ network_name }}"
#        wait_time: 120
        type: collect
        devices: "{{lookup('file', '{{WORKSPACE}}/tmp/firewall_name')}}"
      register: collection_output

    - name: Print snapshot link
      debug:
        msg: '{{ collection_output.snapshot_link }}'

      ###### STEP 2: wait until the collection is over ######
      #
      # Make sure the collection is over by monitoring the busy status of the
      # network's collector and see when the status changes from COLLECTING to IDLE
    - name: Make sure the collection is over
      uri:
        url: "{{url}}/api/networks/{{network_id}}/collector/status"
        method: GET
        force_basic_auth: yes
        user: "{{ username }}"
        password: "{{ password }}"
        body_format: json
        return_content: yes
      register: collector_status_output
      until: collector_status_output.json.busyStatus != "COLLECTING"
      retries: 5
      delay: 15

    - name: Print Collector Status info
      debug:
        msg:
          - "API URL: {{ collector_status_output.url }}"
          - "API Status: {{ collector_status_output.status }}"
          - "Collector busyStatus: {{ collector_status_output.json.busyStatus }}"

      ###### STEP 3: wait until the snapshot processing is over ######
      #
      # Make sure the snapshot processing is over by comparing the
      # latestProcessed id with the partial collection snapshot id (it's the
      # first in the snapshots list)
    - name: Get the list of all snapshots
      uri:
        url: "{{url}}/api/networks/{{network_id}}/snapshots"
        force_basic_auth: yes
        user: "{{ username }}"
        password: "{{ password }}"
        body_format: json
        return_content: yes
      register: snapshots_output

    - name: set ansible variable with partial collection snapshot id
      set_fact:
        partial_collection_snapshot_id: "{{ snapshots_output.json.snapshots[0].id }}"


    - name: Print Snapshots Status info
      debug:
        msg:
          - "API URL: {{ snapshots_output.url }}"
          - "API Status: {{ snapshots_output.status }}"
          - "Partial collection id: {{ snapshots_output.json.snapshots[0].id }}"

    # the partial collection snapshot id is saved to a local file so that can be used
    # to get the checks in the get_snapshot playbook
    - name: Save partial collection snapshot id to a local file
      copy:
        content: "{{ snapshots_output.json.snapshots[0].id }}"
        dest: "./tmp/new_snapshot_id"

    - name: Make sure the collection is over by checking the latestProcessed id
      uri:
        url: "{{url}}/api/networks/{{network_id}}/snapshots/latestProcessed"
        force_basic_auth: yes
        user: "{{ username }}"
        password: "{{ password }}"
        body_format: json
        return_content: yes
      register: latest_processed_output
      until: latest_processed_output.json.id == snapshots_output.json.snapshots[0].id
      retries: 5
      delay: 15

    - name: Print latestProcessed Status info
      debug:
        msg:
          - "API URL: {{ latest_processed_output.url }}"
          - "API Status: {{ latest_processed_output.status }}"
          - "latestProcessed id: {{ latest_processed_output.json.id }}"
          - "Partial Collection id: {{ snapshots_output.json.snapshots[0].id }}"
